(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{734:function(e,t,a){"use strict";a.r(t);var s=a(21),o=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"npmlog"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#npmlog"}},[e._v("#")]),e._v(" npmlog")]),e._v(" "),t("p",[e._v("The logger util that npm uses.")]),e._v(" "),t("p",[e._v("This logger is very basic.  It does the logging for npm.  It supports\ncustom levels and colored output.")]),e._v(" "),t("p",[e._v("By default, logs are written to stderr.  If you want to send log messages\nto outputs other than streams, then you can change the "),t("code",[e._v("log.stream")]),e._v("\nmember, or you can just listen to the events that it emits, and do\nwhatever you want with them.")]),e._v(" "),t("h1",{attrs:{id:"installation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),t("div",{staticClass:"language-console extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install npmlog --save\n")])])]),t("h1",{attrs:{id:"basic-usage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basic-usage"}},[e._v("#")]),e._v(" Basic Usage")]),e._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" log "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'npmlog'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// additional stuff ---------------------------+")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// message ----------+                         |")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// prefix ----+      |                         |")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// level -+   |      |                         |")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//        v   v      v                         v")]),e._v("\n    log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("info")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'fyi'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'I have a kitty cat: %j'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" myKittyCat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),t("h2",{attrs:{id:"log-level"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-level"}},[e._v("#")]),e._v(" log.level")]),e._v(" "),t("ul",[t("li",[e._v("{String}")])]),e._v(" "),t("p",[e._v("The level to display logs at.  Any logs at or above this level will be\ndisplayed.  The special level "),t("code",[e._v("silent")]),e._v(" will prevent anything from being\ndisplayed ever.")]),e._v(" "),t("h2",{attrs:{id:"log-record"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-record"}},[e._v("#")]),e._v(" log.record")]),e._v(" "),t("ul",[t("li",[e._v("{Array}")])]),e._v(" "),t("p",[e._v("An array of all the log messages that have been entered.")]),e._v(" "),t("h2",{attrs:{id:"log-maxrecordsize"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-maxrecordsize"}},[e._v("#")]),e._v(" log.maxRecordSize")]),e._v(" "),t("ul",[t("li",[e._v("{Number}")])]),e._v(" "),t("p",[e._v("The maximum number of records to keep.  If log.record gets bigger than\n10% over this value, then it is sliced down to 90% of this value.")]),e._v(" "),t("p",[e._v("The reason for the 10% window is so that it doesn't have to resize a\nlarge array on every log entry.")]),e._v(" "),t("h2",{attrs:{id:"log-prefixstyle"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-prefixstyle"}},[e._v("#")]),e._v(" log.prefixStyle")]),e._v(" "),t("ul",[t("li",[e._v("{Object}")])]),e._v(" "),t("p",[e._v("A style object that specifies how prefixes are styled.  (See below)")]),e._v(" "),t("h2",{attrs:{id:"log-headingstyle"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-headingstyle"}},[e._v("#")]),e._v(" log.headingStyle")]),e._v(" "),t("ul",[t("li",[e._v("{Object}")])]),e._v(" "),t("p",[e._v("A style object that specifies how the heading is styled.  (See below)")]),e._v(" "),t("h2",{attrs:{id:"log-heading"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-heading"}},[e._v("#")]),e._v(" log.heading")]),e._v(" "),t("ul",[t("li",[e._v('{String} Default: ""')])]),e._v(" "),t("p",[e._v("If set, a heading that is printed at the start of every line.")]),e._v(" "),t("h2",{attrs:{id:"log-stream"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-stream"}},[e._v("#")]),e._v(" log.stream")]),e._v(" "),t("ul",[t("li",[e._v("{Stream} Default: "),t("code",[e._v("process.stderr")])])]),e._v(" "),t("p",[e._v("The stream where output is written.")]),e._v(" "),t("h2",{attrs:{id:"log-enablecolor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-enablecolor"}},[e._v("#")]),e._v(" log.enableColor()")]),e._v(" "),t("p",[e._v("Force colors to be used on all messages, regardless of the output\nstream.")]),e._v(" "),t("h2",{attrs:{id:"log-disablecolor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-disablecolor"}},[e._v("#")]),e._v(" log.disableColor()")]),e._v(" "),t("p",[e._v("Disable colors on all messages.")]),e._v(" "),t("h2",{attrs:{id:"log-enableprogress"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-enableprogress"}},[e._v("#")]),e._v(" log.enableProgress()")]),e._v(" "),t("p",[e._v("Enable the display of log activity spinner and progress bar")]),e._v(" "),t("h2",{attrs:{id:"log-disableprogress"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-disableprogress"}},[e._v("#")]),e._v(" log.disableProgress()")]),e._v(" "),t("p",[e._v("Disable the display of a progress bar")]),e._v(" "),t("h2",{attrs:{id:"log-enableunicode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-enableunicode"}},[e._v("#")]),e._v(" log.enableUnicode()")]),e._v(" "),t("p",[e._v("Force the unicode theme to be used for the progress bar.")]),e._v(" "),t("h2",{attrs:{id:"log-disableunicode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-disableunicode"}},[e._v("#")]),e._v(" log.disableUnicode()")]),e._v(" "),t("p",[e._v("Disable the use of unicode in the progress bar.")]),e._v(" "),t("h2",{attrs:{id:"log-setgaugetemplate-template"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-setgaugetemplate-template"}},[e._v("#")]),e._v(" log.setGaugeTemplate(template)")]),e._v(" "),t("p",[e._v("Set a template for outputting the progress bar. See the "),t("a",{attrs:{href:"https://npmjs.com/package/gauge",target:"_blank",rel:"noopener noreferrer"}},[e._v("gauge documentation"),t("OutboundLink")],1),e._v(" for details.")]),e._v(" "),t("h2",{attrs:{id:"log-setgaugethemeset-themes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-setgaugethemeset-themes"}},[e._v("#")]),e._v(" log.setGaugeThemeset(themes)")]),e._v(" "),t("p",[e._v("Select a themeset to pick themes from for the progress bar. See the "),t("a",{attrs:{href:"https://npmjs.com/package/gauge",target:"_blank",rel:"noopener noreferrer"}},[e._v("gauge documentation"),t("OutboundLink")],1),e._v(" for details.")]),e._v(" "),t("h2",{attrs:{id:"log-pause"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-pause"}},[e._v("#")]),e._v(" log.pause()")]),e._v(" "),t("p",[e._v("Stop emitting messages to the stream, but do not drop them.")]),e._v(" "),t("h2",{attrs:{id:"log-resume"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-resume"}},[e._v("#")]),e._v(" log.resume()")]),e._v(" "),t("p",[e._v("Emit all buffered messages that were written while paused.")]),e._v(" "),t("h2",{attrs:{id:"log-log-level-prefix-message"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-log-level-prefix-message"}},[e._v("#")]),e._v(" log.log(level, prefix, message, ...)")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("level")]),e._v(" {String} The level to emit the message at")]),e._v(" "),t("li",[t("code",[e._v("prefix")]),e._v(' {String} A string prefix.  Set to "" to skip.')]),e._v(" "),t("li",[t("code",[e._v("message...")]),e._v(" Arguments to "),t("code",[e._v("util.format")])])]),e._v(" "),t("p",[e._v("Emit a log message at the specified level.")]),e._v(" "),t("h2",{attrs:{id:"log-level-prefix-message"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-level-prefix-message"}},[e._v("#")]),e._v(" log[level](prefix, message, ...)")]),e._v(" "),t("p",[e._v("For example,")]),e._v(" "),t("ul",[t("li",[e._v("log.silly(prefix, message, ...)")]),e._v(" "),t("li",[e._v("log.verbose(prefix, message, ...)")]),e._v(" "),t("li",[e._v("log.info(prefix, message, ...)")]),e._v(" "),t("li",[e._v("log.http(prefix, message, ...)")]),e._v(" "),t("li",[e._v("log.warn(prefix, message, ...)")]),e._v(" "),t("li",[e._v("log.error(prefix, message, ...)")])]),e._v(" "),t("p",[e._v("Like "),t("code",[e._v("log.log(level, prefix, message, ...)")]),e._v(".  In this way, each level is\ngiven a shorthand, so you can do "),t("code",[e._v("log.info(prefix, message)")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"log-addlevel-level-n-style-disp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-addlevel-level-n-style-disp"}},[e._v("#")]),e._v(" log.addLevel(level, n, style, disp)")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("level")]),e._v(" {String} Level indicator")]),e._v(" "),t("li",[t("code",[e._v("n")]),e._v(" {Number} The numeric level")]),e._v(" "),t("li",[t("code",[e._v("style")]),e._v(" {Object} Object with fg, bg, inverse, etc.")]),e._v(" "),t("li",[t("code",[e._v("disp")]),e._v(" {String} Optional replacement for "),t("code",[e._v("level")]),e._v(" in the output.")])]),e._v(" "),t("p",[e._v("Sets up a new level with a shorthand function and so forth.")]),e._v(" "),t("p",[e._v("Note that if the number is "),t("code",[e._v("Infinity")]),e._v(", then setting the level to that\nwill cause all log messages to be suppressed.  If the number is\n"),t("code",[e._v("-Infinity")]),e._v(", then the only way to show it is to enable all log messages.")]),e._v(" "),t("h2",{attrs:{id:"log-newitem-name-todo-weight"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-newitem-name-todo-weight"}},[e._v("#")]),e._v(" log.newItem(name, todo, weight)")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("name")]),e._v(" {String} Optional; progress item name.")]),e._v(" "),t("li",[t("code",[e._v("todo")]),e._v(" {Number} Optional; total amount of work to be done. Default 0.")]),e._v(" "),t("li",[t("code",[e._v("weight")]),e._v(" {Number} Optional; the weight of this item relative to others. Default 1.")])]),e._v(" "),t("p",[e._v("This adds a new "),t("code",[e._v("are-we-there-yet")]),e._v(" item tracker to the progress tracker. The\nobject returned has the "),t("code",[e._v("log[level]")]),e._v(" methods but is otherwise an\n"),t("code",[e._v("are-we-there-yet")]),e._v(" "),t("code",[e._v("Tracker")]),e._v(" object.")]),e._v(" "),t("h2",{attrs:{id:"log-newstream-name-todo-weight"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-newstream-name-todo-weight"}},[e._v("#")]),e._v(" log.newStream(name, todo, weight)")]),e._v(" "),t("p",[e._v("This adds a new "),t("code",[e._v("are-we-there-yet")]),e._v(" stream tracker to the progress tracker. The\nobject returned has the "),t("code",[e._v("log[level]")]),e._v(" methods but is otherwise an\n"),t("code",[e._v("are-we-there-yet")]),e._v(" "),t("code",[e._v("TrackerStream")]),e._v(" object.")]),e._v(" "),t("h2",{attrs:{id:"log-newgroup-name-weight"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-newgroup-name-weight"}},[e._v("#")]),e._v(" log.newGroup(name, weight)")]),e._v(" "),t("p",[e._v("This adds a new "),t("code",[e._v("are-we-there-yet")]),e._v(" tracker group to the progress tracker. The\nobject returned has the "),t("code",[e._v("log[level]")]),e._v(" methods but is otherwise an\n"),t("code",[e._v("are-we-there-yet")]),e._v(" "),t("code",[e._v("TrackerGroup")]),e._v(" object.")]),e._v(" "),t("h1",{attrs:{id:"events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[e._v("#")]),e._v(" Events")]),e._v(" "),t("p",[e._v("Events are all emitted with the message object.")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("log")]),e._v(" Emitted for all messages")]),e._v(" "),t("li",[t("code",[e._v("log.<level>")]),e._v(" Emitted for all messages with the "),t("code",[e._v("<level>")]),e._v(" level.")]),e._v(" "),t("li",[t("code",[e._v("<prefix>")]),e._v(" Messages with prefixes also emit their prefix as an event.")])]),e._v(" "),t("h1",{attrs:{id:"style-objects"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#style-objects"}},[e._v("#")]),e._v(" Style Objects")]),e._v(" "),t("p",[e._v("Style objects can have the following fields:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("fg")]),e._v(" {String} Color for the foreground text")]),e._v(" "),t("li",[t("code",[e._v("bg")]),e._v(" {String} Color for the background")]),e._v(" "),t("li",[t("code",[e._v("bold")]),e._v(", "),t("code",[e._v("inverse")]),e._v(", "),t("code",[e._v("underline")]),e._v(" {Boolean} Set the associated property")]),e._v(" "),t("li",[t("code",[e._v("bell")]),e._v(" {Boolean} Make a noise (This is pretty annoying, probably.)")])]),e._v(" "),t("h1",{attrs:{id:"message-objects"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#message-objects"}},[e._v("#")]),e._v(" Message Objects")]),e._v(" "),t("p",[e._v("Every log event is emitted with a message object, and the "),t("code",[e._v("log.record")]),e._v("\nlist contains all of them that have been created.  They have the\nfollowing fields:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("id")]),e._v(" {Number}")]),e._v(" "),t("li",[t("code",[e._v("level")]),e._v(" {String}")]),e._v(" "),t("li",[t("code",[e._v("prefix")]),e._v(" {String}")]),e._v(" "),t("li",[t("code",[e._v("message")]),e._v(" {String} Result of "),t("code",[e._v("util.format()")])]),e._v(" "),t("li",[t("code",[e._v("messageRaw")]),e._v(" {Array} Arguments to "),t("code",[e._v("util.format()")])])]),e._v(" "),t("h1",{attrs:{id:"blocking-ttys"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#blocking-ttys"}},[e._v("#")]),e._v(" Blocking TTYs")]),e._v(" "),t("p",[e._v("We use "),t("a",{attrs:{href:"https://npmjs.com/package/set-blocking",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("set-blocking")]),t("OutboundLink")],1),e._v(" to set\nstderr and stdout blocking if they are tty's and have the setBlocking call.\nThis is a work around for an issue in early versions of Node.js 6.x, which\nmade stderr and stdout non-blocking on OSX. (They are always blocking\nWindows and were never blocking on Linux.) "),t("code",[e._v("npmlog")]),e._v(" needs them to be blocking\nso that it can allow output to stdout and stderr to be interlaced.")])])}),[],!1,null,null,null);t.default=o.exports}}]);