(window.webpackJsonp=window.webpackJsonp||[]).push([[273],{800:function(t,s,e){"use strict";e.r(s);var a=e(21),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"to-regex-range"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#to-regex-range"}},[t._v("#")]),t._v(" to-regex-range "),s("a",{attrs:{href:"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W8YFZ425KND68",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/badge/Donate-PayPal-green.svg",alt:"Donate"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://www.npmjs.com/package/to-regex-range",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/npm/v/to-regex-range.svg?style=flat",alt:"NPM version"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://npmjs.org/package/to-regex-range",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/npm/dm/to-regex-range.svg?style=flat",alt:"NPM monthly downloads"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://npmjs.org/package/to-regex-range",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/npm/dt/to-regex-range.svg?style=flat",alt:"NPM total downloads"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://travis-ci.org/micromatch/to-regex-range",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/travis/micromatch/to-regex-range.svg?style=flat&label=Travis",alt:"Linux Build Status"}}),s("OutboundLink")],1)]),t._v(" "),s("blockquote",[s("p",[t._v("Pass two numbers, get a regex-compatible source string for matching ranges. Validated against more than 2.78 million test assertions.")])]),t._v(" "),s("p",[t._v("Please consider following this project's author, "),s("a",{attrs:{href:"https://github.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jon Schlinkert"),s("OutboundLink")],1),t._v(", and consider starring the project to show your ❤️ and support.")]),t._v(" "),s("h2",{attrs:{id:"install"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),s("p",[t._v("Install with "),s("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm"),s("OutboundLink")],1),t._v(":")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--save")]),t._v(" to-regex-range\n")])])]),s("details",[s("summary",[s("strong",[t._v("What does this do?")])]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("This libary generates the "),s("code",[t._v("source")]),t._v(" string to be passed to "),s("code",[t._v("new RegExp()")]),t._v(" for matching a range of numbers.")]),t._v(" "),s("p",[s("strong",[t._v("Example")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" toRegexRange "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'to-regex-range'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toRegexRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'15'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'95'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("A string is returned so that you can do whatever you need with it before passing it to "),s("code",[t._v("new RegExp()")]),t._v(" (like adding "),s("code",[t._v("^")]),t._v(" or "),s("code",[t._v("$")]),t._v(" boundaries, defining flags, or combining it another string).")]),t._v(" "),s("br")]),t._v(" "),s("details",[s("summary",[s("strong",[t._v("Why use this library?")])]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"convenience"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#convenience"}},[t._v("#")]),t._v(" Convenience")]),t._v(" "),s("p",[t._v("Creating regular expressions for matching numbers gets deceptively complicated pretty fast.")]),t._v(" "),s("p",[t._v("For example, let's say you need a validation regex for matching part of a user-id, postal code, social security number, tax id, etc:")]),t._v(" "),s("ul",[s("li",[t._v("regex for matching "),s("code",[t._v("1")]),t._v(" => "),s("code",[t._v("/1/")]),t._v(" (easy enough)")]),t._v(" "),s("li",[t._v("regex for matching "),s("code",[t._v("1")]),t._v(" through "),s("code",[t._v("5")]),t._v(" => "),s("code",[t._v("/[1-5]/")]),t._v(" (not bad...)")]),t._v(" "),s("li",[t._v("regex for matching "),s("code",[t._v("1")]),t._v(" or "),s("code",[t._v("5")]),t._v(" => "),s("code",[t._v("/(1|5)/")]),t._v(" (still easy...)")]),t._v(" "),s("li",[t._v("regex for matching "),s("code",[t._v("1")]),t._v(" through "),s("code",[t._v("50")]),t._v(" => "),s("code",[t._v("/([1-9]|[1-4][0-9]|50)/")]),t._v(" (uh-oh...)")]),t._v(" "),s("li",[t._v("regex for matching "),s("code",[t._v("1")]),t._v(" through "),s("code",[t._v("55")]),t._v(" => "),s("code",[t._v("/([1-9]|[1-4][0-9]|5[0-5])/")]),t._v(" (no prob, I can do this...)")]),t._v(" "),s("li",[t._v("regex for matching "),s("code",[t._v("1")]),t._v(" through "),s("code",[t._v("555")]),t._v(" => "),s("code",[t._v("/([1-9]|[1-9][0-9]|[1-4][0-9]{2}|5[0-4][0-9]|55[0-5])/")]),t._v(" (maybe not...)")]),t._v(" "),s("li",[t._v("regex for matching "),s("code",[t._v("0001")]),t._v(" through "),s("code",[t._v("5555")]),t._v(" => "),s("code",[t._v("/(0{3}[1-9]|0{2}[1-9][0-9]|0[1-9][0-9]{2}|[1-4][0-9]{3}|5[0-4][0-9]{2}|55[0-4][0-9]|555[0-5])/")]),t._v(" (okay, I get the point!)")])]),t._v(" "),s("p",[t._v("The numbers are contrived, but they're also really basic. In the real world you might need to generate a regex on-the-fly for validation.")]),t._v(" "),s("p",[s("strong",[t._v("Learn more")])]),t._v(" "),s("p",[t._v("If you're interested in learning more about "),s("a",{attrs:{href:"http://www.regular-expressions.info/charclass.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("character classes"),s("OutboundLink")],1),t._v(" and other regex features, I personally have always found "),s("a",{attrs:{href:"http://www.regular-expressions.info/charclass.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("regular-expressions.info"),s("OutboundLink")],1),t._v(" to be pretty useful.")]),t._v(" "),s("h3",{attrs:{id:"heavily-tested"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#heavily-tested"}},[t._v("#")]),t._v(" Heavily tested")]),t._v(" "),s("p",[t._v("As of April 07, 2019, this library runs "),s("a",{attrs:{href:"./test/test.js"}},[t._v(">1m test assertions")]),t._v(" against generated regex-ranges to provide brute-force verification that results are correct.")]),t._v(" "),s("p",[t._v("Tests run in ~280ms on my MacBook Pro, 2.5 GHz Intel Core i7.")]),t._v(" "),s("h3",{attrs:{id:"optimized"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#optimized"}},[t._v("#")]),t._v(" Optimized")]),t._v(" "),s("p",[t._v("Generated regular expressions are optimized:")]),t._v(" "),s("ul",[s("li",[t._v("duplicate sequences and character classes are reduced using quantifiers")]),t._v(" "),s("li",[t._v("smart enough to use "),s("code",[t._v("?")]),t._v(" conditionals when number(s) or range(s) can be positive or negative")]),t._v(" "),s("li",[t._v("uses fragment caching to avoid processing the same exact string more than once")])]),t._v(" "),s("br")]),t._v(" "),s("h2",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),s("p",[t._v("Add this library to your javascript application with the following line of code")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" toRegexRange "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'to-regex-range'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The main export is a function that takes two integers: the "),s("code",[t._v("min")]),t._v(" value and "),s("code",[t._v("max")]),t._v(" value (formatted as strings or numbers).")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" source "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toRegexRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'15'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'95'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> 1[5-9]|[2-8][0-9]|9[0-5]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("source"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'14'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'50'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'94'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'96'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> false")]),t._v("\n")])])]),s("h2",{attrs:{id:"options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),s("h3",{attrs:{id:"options-capture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-capture"}},[t._v("#")]),t._v(" options.capture")]),t._v(" "),s("p",[s("strong",[t._v("Type")]),t._v(": "),s("code",[t._v("boolean")])]),t._v(" "),s("p",[s("strong",[t._v("Deafault")]),t._v(": "),s("code",[t._v("undefined")])]),t._v(" "),s("p",[t._v("Wrap the returned value in parentheses when there is more than one regex condition. Useful when you're dynamically generating ranges.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toRegexRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-10'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> -[1-9]|-?10|[0-9]")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toRegexRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-10'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("capture")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> (-[1-9]|-?10|[0-9])")]),t._v("\n")])])]),s("h3",{attrs:{id:"options-shorthand"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-shorthand"}},[t._v("#")]),t._v(" options.shorthand")]),t._v(" "),s("p",[s("strong",[t._v("Type")]),t._v(": "),s("code",[t._v("boolean")])]),t._v(" "),s("p",[s("strong",[t._v("Deafault")]),t._v(": "),s("code",[t._v("undefined")])]),t._v(" "),s("p",[t._v("Use the regex shorthand for "),s("code",[t._v("[0-9]")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toRegexRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'999999'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> [0-9]|[1-9][0-9]{1,5}")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toRegexRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'999999'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("shorthand")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> \\d|[1-9]\\d{1,5}")]),t._v("\n")])])]),s("h3",{attrs:{id:"options-relaxzeros"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-relaxzeros"}},[t._v("#")]),t._v(" options.relaxZeros")]),t._v(" "),s("p",[s("strong",[t._v("Type")]),t._v(": "),s("code",[t._v("boolean")])]),t._v(" "),s("p",[s("strong",[t._v("Default")]),t._v(": "),s("code",[t._v("true")])]),t._v(" "),s("p",[t._v("This option relaxes matching for leading zeros when when ranges are zero-padded.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" source "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toRegexRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-0010'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0010'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("source"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-10'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-010'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-0010'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'010'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0010'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\n")])])]),s("p",[t._v("When "),s("code",[t._v("relaxZeros")]),t._v(" is false, matching is strict:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" source "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toRegexRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-0010'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0010'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("relaxZeros")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("source"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-10'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-010'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-0010'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'010'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0010'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\n")])])]),s("h2",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("Range")])]),t._v(" "),s("th",[s("strong",[t._v("Result")])]),t._v(" "),s("th",[s("strong",[t._v("Compile time")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("toRegexRange(-10, 10)")])]),t._v(" "),s("td",[s("code",[t._v("-[1-9]\\|-?10\\|[0-9]")])]),t._v(" "),s("td",[s("em",[t._v("132μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(-100, -10)")])]),t._v(" "),s("td",[s("code",[t._v("-1[0-9]\\|-[2-9][0-9]\\|-100")])]),t._v(" "),s("td",[s("em",[t._v("50μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(-100, 100)")])]),t._v(" "),s("td",[s("code",[t._v("-[1-9]\\|-?[1-9][0-9]\\|-?100\\|[0-9]")])]),t._v(" "),s("td",[s("em",[t._v("42μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(001, 100)")])]),t._v(" "),s("td",[s("code",[t._v("0{0,2}[1-9]\\|0?[1-9][0-9]\\|100")])]),t._v(" "),s("td",[s("em",[t._v("109μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(001, 555)")])]),t._v(" "),s("td",[s("code",[t._v("0{0,2}[1-9]\\|0?[1-9][0-9]\\|[1-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5]")])]),t._v(" "),s("td",[s("em",[t._v("51μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(0010, 1000)")])]),t._v(" "),s("td",[s("code",[t._v("0{0,2}1[0-9]\\|0{0,2}[2-9][0-9]\\|0?[1-9][0-9]{2}\\|1000")])]),t._v(" "),s("td",[s("em",[t._v("31μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(1, 50)")])]),t._v(" "),s("td",[s("code",[t._v("[1-9]\\|[1-4][0-9]\\|50")])]),t._v(" "),s("td",[s("em",[t._v("24μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(1, 55)")])]),t._v(" "),s("td",[s("code",[t._v("[1-9]\\|[1-4][0-9]\\|5[0-5]")])]),t._v(" "),s("td",[s("em",[t._v("23μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(1, 555)")])]),t._v(" "),s("td",[s("code",[t._v("[1-9]\\|[1-9][0-9]\\|[1-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5]")])]),t._v(" "),s("td",[s("em",[t._v("30μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(1, 5555)")])]),t._v(" "),s("td",[s("code",[t._v("[1-9]\\|[1-9][0-9]{1,2}\\|[1-4][0-9]{3}\\|5[0-4][0-9]{2}\\|55[0-4][0-9]\\|555[0-5]")])]),t._v(" "),s("td",[s("em",[t._v("43μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(111, 555)")])]),t._v(" "),s("td",[s("code",[t._v("11[1-9]\\|1[2-9][0-9]\\|[2-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5]")])]),t._v(" "),s("td",[s("em",[t._v("38μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(29, 51)")])]),t._v(" "),s("td",[s("code",[t._v("29\\|[34][0-9]\\|5[01]")])]),t._v(" "),s("td",[s("em",[t._v("24μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(31, 877)")])]),t._v(" "),s("td",[s("code",[t._v("3[1-9]\\|[4-9][0-9]\\|[1-7][0-9]{2}\\|8[0-6][0-9]\\|87[0-7]")])]),t._v(" "),s("td",[s("em",[t._v("32μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(5, 5)")])]),t._v(" "),s("td",[s("code",[t._v("5")])]),t._v(" "),s("td",[s("em",[t._v("8μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(5, 6)")])]),t._v(" "),s("td",[s("code",[t._v("5\\|6")])]),t._v(" "),s("td",[s("em",[t._v("11μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(1, 2)")])]),t._v(" "),s("td",[s("code",[t._v("1\\|2")])]),t._v(" "),s("td",[s("em",[t._v("6μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(1, 5)")])]),t._v(" "),s("td",[s("code",[t._v("[1-5]")])]),t._v(" "),s("td",[s("em",[t._v("15μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(1, 10)")])]),t._v(" "),s("td",[s("code",[t._v("[1-9]\\|10")])]),t._v(" "),s("td",[s("em",[t._v("22μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(1, 100)")])]),t._v(" "),s("td",[s("code",[t._v("[1-9]\\|[1-9][0-9]\\|100")])]),t._v(" "),s("td",[s("em",[t._v("25μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(1, 1000)")])]),t._v(" "),s("td",[s("code",[t._v("[1-9]\\|[1-9][0-9]{1,2}\\|1000")])]),t._v(" "),s("td",[s("em",[t._v("31μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(1, 10000)")])]),t._v(" "),s("td",[s("code",[t._v("[1-9]\\|[1-9][0-9]{1,3}\\|10000")])]),t._v(" "),s("td",[s("em",[t._v("34μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(1, 100000)")])]),t._v(" "),s("td",[s("code",[t._v("[1-9]\\|[1-9][0-9]{1,4}\\|100000")])]),t._v(" "),s("td",[s("em",[t._v("36μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(1, 1000000)")])]),t._v(" "),s("td",[s("code",[t._v("[1-9]\\|[1-9][0-9]{1,5}\\|1000000")])]),t._v(" "),s("td",[s("em",[t._v("42μs")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("toRegexRange(1, 10000000)")])]),t._v(" "),s("td",[s("code",[t._v("[1-9]\\|[1-9][0-9]{1,6}\\|10000000")])]),t._v(" "),s("td",[s("em",[t._v("42μs")])])])])]),t._v(" "),s("h2",{attrs:{id:"heads-up"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#heads-up"}},[t._v("#")]),t._v(" Heads up!")]),t._v(" "),s("p",[s("strong",[t._v("Order of arguments")])]),t._v(" "),s("p",[t._v("When the "),s("code",[t._v("min")]),t._v(" is larger than the "),s("code",[t._v("max")]),t._v(", values will be flipped to create a valid range:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toRegexRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'51'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'29'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Is effectively flipped to:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toRegexRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'29'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'51'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> 29|[3-4][0-9]|5[0-1]")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Steps / increments")])]),t._v(" "),s("p",[t._v("This library does not support steps (increments). A pr to add support would be welcome.")]),t._v(" "),s("h2",{attrs:{id:"history"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history"}},[t._v("#")]),t._v(" History")]),t._v(" "),s("h3",{attrs:{id:"v2-0-0-2017-04-21"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v2-0-0-2017-04-21"}},[t._v("#")]),t._v(" v2.0.0 - 2017-04-21")]),t._v(" "),s("p",[s("strong",[t._v("New features")])]),t._v(" "),s("p",[t._v("Adds support for zero-padding!")]),t._v(" "),s("h3",{attrs:{id:"v1-0-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-0"}},[t._v("#")]),t._v(" v1.0.0")]),t._v(" "),s("p",[s("strong",[t._v("Optimizations")])]),t._v(" "),s("p",[t._v("Repeating ranges are now grouped using quantifiers. rocessing time is roughly the same, but the generated regex is much smaller, which should result in faster matching.")]),t._v(" "),s("h2",{attrs:{id:"attribution"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#attribution"}},[t._v("#")]),t._v(" Attribution")]),t._v(" "),s("p",[t._v("Inspired by the python library "),s("a",{attrs:{href:"https://github.com/dimka665/range-regex",target:"_blank",rel:"noopener noreferrer"}},[t._v("range-regex"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"about"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#about"}},[t._v("#")]),t._v(" About")]),t._v(" "),s("details",[s("summary",[s("strong",[t._v("Contributing")])]),t._v(" "),s("p",[t._v("Pull requests and stars are always welcome. For bugs and feature requests, "),s("a",{attrs:{href:"../../issues/new"}},[t._v("please create an issue")]),t._v(".")])]),t._v(" "),s("details",[s("summary",[s("strong",[t._v("Running Tests")])]),t._v(" "),s("p",[t._v("Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])])])]),t._v(" "),s("details",[s("summary",[s("strong",[t._v("Building docs")])]),t._v(" "),s("p",[s("em",[t._v("(This project's readme.md is generated by "),s("a",{attrs:{href:"https://github.com/verbose/verb-generate-readme",target:"_blank",rel:"noopener noreferrer"}},[t._v("verb"),s("OutboundLink")],1),t._v(", please don't edit the readme directly. Any changes to the readme must be made in the "),s("RouterLink",{attrs:{to:"/software/node_modules/to-regex-range/.verb.html"}},[t._v(".verb.md")]),t._v(" readme template.)")],1)]),t._v(" "),s("p",[t._v("To generate the readme, run the following command:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" verbose/verb"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#dev verb-generate-readme && verb")]),t._v("\n")])])])]),t._v(" "),s("h3",{attrs:{id:"related-projects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#related-projects"}},[t._v("#")]),t._v(" Related projects")]),t._v(" "),s("p",[t._v("You might also be interested in these projects:")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.npmjs.com/package/expand-range",target:"_blank",rel:"noopener noreferrer"}},[t._v("expand-range"),s("OutboundLink")],1),t._v(": Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. Used… "),s("a",{attrs:{href:"https://github.com/jonschlinkert/expand-range",target:"_blank",rel:"noopener noreferrer"}},[t._v("more"),s("OutboundLink")],1),t._v(" | "),s("a",{attrs:{href:"https://github.com/jonschlinkert/expand-range",title:"Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. Used by micromatch.",target:"_blank",rel:"noopener noreferrer"}},[t._v("homepage"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.npmjs.com/package/fill-range",target:"_blank",rel:"noopener noreferrer"}},[t._v("fill-range"),s("OutboundLink")],1),t._v(": Fill in a range of numbers or letters, optionally passing an increment or "),s("code",[t._v("step")]),t._v(" to… "),s("a",{attrs:{href:"https://github.com/jonschlinkert/fill-range",target:"_blank",rel:"noopener noreferrer"}},[t._v("more"),s("OutboundLink")],1),t._v(" | "),s("a",{attrs:{href:"https://github.com/jonschlinkert/fill-range",title:"Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`",target:"_blank",rel:"noopener noreferrer"}},[t._v("homepage"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.npmjs.com/package/micromatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("micromatch"),s("OutboundLink")],1),t._v(": Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | "),s("a",{attrs:{href:"https://github.com/micromatch/micromatch",title:"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.",target:"_blank",rel:"noopener noreferrer"}},[t._v("homepage"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.npmjs.com/package/repeat-element",target:"_blank",rel:"noopener noreferrer"}},[t._v("repeat-element"),s("OutboundLink")],1),t._v(": Create an array by repeating the given value n times. | "),s("a",{attrs:{href:"https://github.com/jonschlinkert/repeat-element",title:"Create an array by repeating the given value n times.",target:"_blank",rel:"noopener noreferrer"}},[t._v("homepage"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.npmjs.com/package/repeat-string",target:"_blank",rel:"noopener noreferrer"}},[t._v("repeat-string"),s("OutboundLink")],1),t._v(": Repeat the given string n times. Fastest implementation for repeating a string. | "),s("a",{attrs:{href:"https://github.com/jonschlinkert/repeat-string",title:"Repeat the given string n times. Fastest implementation for repeating a string.",target:"_blank",rel:"noopener noreferrer"}},[t._v("homepage"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"contributors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#contributors"}},[t._v("#")]),t._v(" Contributors")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("Commits")])]),t._v(" "),s("th",[s("strong",[t._v("Contributor")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("63")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://github.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[t._v("jonschlinkert"),s("OutboundLink")],1)])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://github.com/doowb",target:"_blank",rel:"noopener noreferrer"}},[t._v("doowb"),s("OutboundLink")],1)])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://github.com/realityking",target:"_blank",rel:"noopener noreferrer"}},[t._v("realityking"),s("OutboundLink")],1)])])])]),t._v(" "),s("h3",{attrs:{id:"author"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#author"}},[t._v("#")]),t._v(" Author")]),t._v(" "),s("p",[s("strong",[t._v("Jon Schlinkert")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Profile"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://twitter.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[t._v("Twitter Profile"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://linkedin.com/in/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[t._v("LinkedIn Profile"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("Please consider supporting me on Patreon, or "),s("a",{attrs:{href:"https://patreon.com/invite/bxpbvm",target:"_blank",rel:"noopener noreferrer"}},[t._v("start your own Patreon page"),s("OutboundLink")],1),t._v("!")]),t._v(" "),s("a",{attrs:{href:"https://www.patreon.com/jonschlinkert"}},[s("img",{attrs:{src:"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png",height:"50"}})]),t._v(" "),s("h3",{attrs:{id:"license"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),s("p",[t._v("Copyright © 2019, "),s("a",{attrs:{href:"https://github.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jon Schlinkert"),s("OutboundLink")],1),t._v(".\nReleased under the "),s("a",{attrs:{href:"LICENSE"}},[t._v("MIT License")]),t._v(".")]),t._v(" "),s("hr"),t._v(" "),s("p",[s("em",[t._v("This file was generated by "),s("a",{attrs:{href:"https://github.com/verbose/verb-generate-readme",target:"_blank",rel:"noopener noreferrer"}},[t._v("verb-generate-readme"),s("OutboundLink")],1),t._v(", v0.8.0, on April 07, 2019.")])])])}),[],!1,null,null,null);s.default=n.exports}}]);