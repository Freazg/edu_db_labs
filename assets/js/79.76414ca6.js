(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{623:function(t,e,s){"use strict";s.r(e);var a=s(21),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"chokidar"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chokidar"}},[t._v("#")]),t._v(" Chokidar "),e("a",{attrs:{href:"https://github.com/paulmillr/chokidar",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://img.shields.io/npm/dw/chokidar.svg",alt:"Weekly downloads"}}),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://github.com/paulmillr/chokidar",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://img.shields.io/npm/dy/chokidar.svg",alt:"Yearly downloads"}}),e("OutboundLink")],1)]),t._v(" "),e("blockquote",[e("p",[t._v("Minimal and efficient cross-platform file watching library")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.npmjs.com/package/chokidar",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://nodei.co/npm/chokidar.png",alt:"NPM"}}),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"why"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[t._v("#")]),t._v(" Why?")]),t._v(" "),e("p",[t._v("Node.js "),e("code",[t._v("fs.watch")]),t._v(":")]),t._v(" "),e("ul",[e("li",[t._v("Doesn't report filenames on MacOS.")]),t._v(" "),e("li",[t._v("Doesn't report events at all when using editors like Sublime on MacOS.")]),t._v(" "),e("li",[t._v("Often reports events twice.")]),t._v(" "),e("li",[t._v("Emits most changes as "),e("code",[t._v("rename")]),t._v(".")]),t._v(" "),e("li",[t._v("Does not provide an easy way to recursively watch file trees.")]),t._v(" "),e("li",[t._v("Does not support recursive watching on Linux.")])]),t._v(" "),e("p",[t._v("Node.js "),e("code",[t._v("fs.watchFile")]),t._v(":")]),t._v(" "),e("ul",[e("li",[t._v("Almost as bad at event handling.")]),t._v(" "),e("li",[t._v("Also does not provide any recursive watching.")]),t._v(" "),e("li",[t._v("Results in high CPU utilization.")])]),t._v(" "),e("p",[t._v("Chokidar resolves these problems.")]),t._v(" "),e("p",[t._v("Initially made for "),e("strong",[e("a",{attrs:{href:"https://brunch.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Brunch"),e("OutboundLink")],1)]),t._v(" (an ultra-swift web app build tool), it is now used in\n"),e("a",{attrs:{href:"https://github.com/microsoft/vscode",target:"_blank",rel:"noopener noreferrer"}},[t._v("Microsoft's Visual Studio Code"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://github.com/gulpjs/gulp/",target:"_blank",rel:"noopener noreferrer"}},[t._v("gulp"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://karma-runner.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("karma"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://github.com/Unitech/PM2",target:"_blank",rel:"noopener noreferrer"}},[t._v("PM2"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"http://browserify.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("browserify"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://webpack.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://www.browsersync.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("BrowserSync"),e("OutboundLink")],1),t._v(",\nand "),e("a",{attrs:{href:"https://www.npmjs.com/browse/depended/chokidar",target:"_blank",rel:"noopener noreferrer"}},[t._v("many others"),e("OutboundLink")],1),t._v(".\nIt has proven itself in production environments.")]),t._v(" "),e("p",[t._v("Version 3 is out! Check out our blog post about it: "),e("a",{attrs:{href:"https://paulmillr.com/posts/chokidar-3-save-32tb-of-traffic/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chokidar 3: How to save 32TB of traffic every week"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"how"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how"}},[t._v("#")]),t._v(" How?")]),t._v(" "),e("p",[t._v("Chokidar does still rely on the Node.js core "),e("code",[t._v("fs")]),t._v(" module, but when using\n"),e("code",[t._v("fs.watch")]),t._v(" and "),e("code",[t._v("fs.watchFile")]),t._v(" for watching, it normalizes the events it\nreceives, often checking for truth by getting file stats and/or dir contents.")]),t._v(" "),e("p",[t._v("On MacOS, chokidar by default uses a native extension exposing the Darwin\n"),e("code",[t._v("FSEvents")]),t._v(" API. This provides very efficient recursive watching compared with\nimplementations like "),e("code",[t._v("kqueue")]),t._v(" available on most *nix platforms. Chokidar still\ndoes have to do some work to normalize the events received that way as well.")]),t._v(" "),e("p",[t._v("On most other platforms, the "),e("code",[t._v("fs.watch")]),t._v("-based implementation is the default, which\navoids polling and keeps CPU usage down. Be advised that chokidar will initiate\nwatchers recursively for everything within scope of the paths that have been\nspecified, so be judicious about not wasting system resources by watching much\nmore than needed.")]),t._v(" "),e("h2",{attrs:{id:"getting-started"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting started")]),t._v(" "),e("p",[t._v("Install with npm:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" chokidar\n")])])]),e("p",[t._v("Then "),e("code",[t._v("require")]),t._v(" and use it in your code:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" chokidar "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chokidar'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// One-liner for current directory")]),t._v("\nchokidar"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'all'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Example of a more typical implementation structure")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize watcher.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" watcher "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" chokidar"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file, dir, glob, or array'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ignored")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(^|[\\/\\\\])\\..")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ignore dotfiles")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("persistent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Something to use when events are received.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" log "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add event listeners.")]),t._v("\nwatcher\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("File ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(" has been added")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("File ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(" has been changed")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unlink'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("File ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(" has been removed")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// More possible events.")]),t._v("\nwatcher\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'addDir'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Directory ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(" has been added")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unlinkDir'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Directory ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(" has been removed")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Watcher error: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("error"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ready'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial scan complete. Ready for changes'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'raw'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" details")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// internal")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Raw event info:'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" details"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'add', 'addDir' and 'change' events also receive stat() results as second")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// argument when available: https://nodejs.org/api/fs.html#fs_class_fs_stats")]),t._v("\nwatcher"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stats")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("File ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(" changed size to ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("stats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Watch new files.")]),t._v("\nwatcher"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new-file'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwatcher"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new-file-2'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new-file-3'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'**/other-file*'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get list of actual paths being watched on the filesystem")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" watchedPaths "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" watcher"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getWatched")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Un-watch some files.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" watcher"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("unwatch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new-file*'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Stop watching.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The method is async!")]),t._v("\nwatcher"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'closed'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Full list of options. See below for descriptions.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not use this example!")]),t._v("\nchokidar"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("persistent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ignored")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.txt'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ignoreInitial")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("followSymlinks")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("cwd")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("disableGlobbing")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("usePolling")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("interval")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("binaryInterval")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("alwaysStat")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("depth")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("awaitWriteFinish")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("stabilityThreshold")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pollInterval")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ignorePermissionErrors")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("atomic")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or a custom 'atomicity delay', in milliseconds (default 100)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("p",[e("code",[t._v("chokidar.watch(paths, [options])")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("paths")]),t._v(" (string or array of strings). Paths to files, dirs to be watched\nrecursively, or glob patterns.\n"),e("ul",[e("li",[t._v("Note: globs must not contain windows separators ("),e("code",[t._v("\\")]),t._v("),\nbecause that's how they work by the standard —\nyou'll need to replace them with forward slashes ("),e("code",[t._v("/")]),t._v(").")]),t._v(" "),e("li",[t._v("Note 2: for additional glob documentation, check out low-level\nlibrary: "),e("a",{attrs:{href:"https://github.com/micromatch/picomatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("picomatch"),e("OutboundLink")],1),t._v(".")])])]),t._v(" "),e("li",[e("code",[t._v("options")]),t._v(" (object) Options object as defined below:")])]),t._v(" "),e("h4",{attrs:{id:"persistence"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#persistence"}},[t._v("#")]),t._v(" Persistence")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("persistent")]),t._v(" (default: "),e("code",[t._v("true")]),t._v("). Indicates whether the process\nshould continue to run as long as files are being watched. If set to\n"),e("code",[t._v("false")]),t._v(" when using "),e("code",[t._v("fsevents")]),t._v(" to watch, no more events will be emitted\nafter "),e("code",[t._v("ready")]),t._v(", even if the process continues to run.")])]),t._v(" "),e("h4",{attrs:{id:"path-filtering"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#path-filtering"}},[t._v("#")]),t._v(" Path filtering")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("ignored")]),t._v(" ("),e("a",{attrs:{href:"https://github.com/es128/anymatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("anymatch"),e("OutboundLink")],1),t._v("-compatible definition)\nDefines files/paths to be ignored. The whole relative or absolute path is\ntested, not just filename. If a function with two arguments is provided, it\ngets called twice per path - once with a single argument (the path), second\ntime with two arguments (the path and the\n"),e("a",{attrs:{href:"https://nodejs.org/api/fs.html#fs_class_fs_stats",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("fs.Stats")]),e("OutboundLink")],1),t._v("\nobject of that path).")]),t._v(" "),e("li",[e("code",[t._v("ignoreInitial")]),t._v(" (default: "),e("code",[t._v("false")]),t._v("). If set to "),e("code",[t._v("false")]),t._v(" then "),e("code",[t._v("add")]),t._v("/"),e("code",[t._v("addDir")]),t._v(" events are also emitted for matching paths while\ninstantiating the watching as chokidar discovers these file paths (before the "),e("code",[t._v("ready")]),t._v(" event).")]),t._v(" "),e("li",[e("code",[t._v("followSymlinks")]),t._v(" (default: "),e("code",[t._v("true")]),t._v("). When "),e("code",[t._v("false")]),t._v(", only the\nsymlinks themselves will be watched for changes instead of following\nthe link references and bubbling events through the link's path.")]),t._v(" "),e("li",[e("code",[t._v("cwd")]),t._v(" (no default). The base directory from which watch "),e("code",[t._v("paths")]),t._v(" are to be\nderived. Paths emitted with events will be relative to this.")]),t._v(" "),e("li",[e("code",[t._v("disableGlobbing")]),t._v(" (default: "),e("code",[t._v("false")]),t._v("). If set to "),e("code",[t._v("true")]),t._v(" then the strings passed to "),e("code",[t._v(".watch()")]),t._v(" and "),e("code",[t._v(".add()")]),t._v(" are treated as\nliteral path names, even if they look like globs.")])]),t._v(" "),e("h4",{attrs:{id:"performance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#performance"}},[t._v("#")]),t._v(" Performance")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("usePolling")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(").\nWhether to use fs.watchFile (backed by polling), or fs.watch. If polling\nleads to high CPU utilization, consider setting this to "),e("code",[t._v("false")]),t._v(". It is\ntypically necessary to "),e("strong",[t._v("set this to "),e("code",[t._v("true")]),t._v(" to successfully watch files over\na network")]),t._v(", and it may be necessary to successfully watch files in other\nnon-standard situations. Setting to "),e("code",[t._v("true")]),t._v(" explicitly on MacOS overrides the\n"),e("code",[t._v("useFsEvents")]),t._v(" default. You may also set the CHOKIDAR_USEPOLLING env variable\nto true (1) or false (0) in order to override this option.")]),t._v(" "),e("li",[e("em",[t._v("Polling-specific settings")]),t._v(" (effective when "),e("code",[t._v("usePolling: true")]),t._v(")\n"),e("ul",[e("li",[e("code",[t._v("interval")]),t._v(" (default: "),e("code",[t._v("100")]),t._v("). Interval of file system polling, in milliseconds. You may also\nset the CHOKIDAR_INTERVAL env variable to override this option.")]),t._v(" "),e("li",[e("code",[t._v("binaryInterval")]),t._v(" (default: "),e("code",[t._v("300")]),t._v("). Interval of file system\npolling for binary files.\n("),e("a",{attrs:{href:"https://github.com/sindresorhus/binary-extensions/blob/master/binary-extensions.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("see list of binary extensions"),e("OutboundLink")],1),t._v(")")])])]),t._v(" "),e("li",[e("code",[t._v("useFsEvents")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(" on MacOS). Whether to use the\n"),e("code",[t._v("fsevents")]),t._v(" watching interface if available. When set to "),e("code",[t._v("true")]),t._v(" explicitly\nand "),e("code",[t._v("fsevents")]),t._v(" is available this supercedes the "),e("code",[t._v("usePolling")]),t._v(" setting. When\nset to "),e("code",[t._v("false")]),t._v(" on MacOS, "),e("code",[t._v("usePolling: true")]),t._v(" becomes the default.")]),t._v(" "),e("li",[e("code",[t._v("alwaysStat")]),t._v(" (default: "),e("code",[t._v("false")]),t._v("). If relying upon the\n"),e("a",{attrs:{href:"https://nodejs.org/api/fs.html#fs_class_fs_stats",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("fs.Stats")]),e("OutboundLink")],1),t._v("\nobject that may get passed with "),e("code",[t._v("add")]),t._v(", "),e("code",[t._v("addDir")]),t._v(", and "),e("code",[t._v("change")]),t._v(" events, set\nthis to "),e("code",[t._v("true")]),t._v(" to ensure it is provided even in cases where it wasn't\nalready available from the underlying watch events.")]),t._v(" "),e("li",[e("code",[t._v("depth")]),t._v(" (default: "),e("code",[t._v("undefined")]),t._v("). If set, limits how many levels of\nsubdirectories will be traversed.")]),t._v(" "),e("li",[e("code",[t._v("awaitWriteFinish")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(").\nBy default, the "),e("code",[t._v("add")]),t._v(" event will fire when a file first appears on disk, before\nthe entire file has been written. Furthermore, in some cases some "),e("code",[t._v("change")]),t._v("\nevents will be emitted while the file is being written. In some cases,\nespecially when watching for large files there will be a need to wait for the\nwrite operation to finish before responding to a file creation or modification.\nSetting "),e("code",[t._v("awaitWriteFinish")]),t._v(" to "),e("code",[t._v("true")]),t._v(" (or a truthy value) will poll file size,\nholding its "),e("code",[t._v("add")]),t._v(" and "),e("code",[t._v("change")]),t._v(" events until the size does not change for a\nconfigurable amount of time. The appropriate duration setting is heavily\ndependent on the OS and hardware. For accurate detection this parameter should\nbe relatively high, making file watching much less responsive.\nUse with caution.\n"),e("ul",[e("li",[e("em",[e("code",[t._v("options.awaitWriteFinish")]),t._v(" can be set to an object in order to adjust\ntiming params:")])]),t._v(" "),e("li",[e("code",[t._v("awaitWriteFinish.stabilityThreshold")]),t._v(" (default: 2000). Amount of time in\nmilliseconds for a file size to remain constant before emitting its event.")]),t._v(" "),e("li",[e("code",[t._v("awaitWriteFinish.pollInterval")]),t._v(" (default: 100). File size polling interval, in milliseconds.")])])])]),t._v(" "),e("h4",{attrs:{id:"errors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#errors"}},[t._v("#")]),t._v(" Errors")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("ignorePermissionErrors")]),t._v(" (default: "),e("code",[t._v("false")]),t._v("). Indicates whether to watch files\nthat don't have read permissions if possible. If watching fails due to "),e("code",[t._v("EPERM")]),t._v("\nor "),e("code",[t._v("EACCES")]),t._v(" with this set to "),e("code",[t._v("true")]),t._v(", the errors will be suppressed silently.")]),t._v(" "),e("li",[e("code",[t._v("atomic")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(" if "),e("code",[t._v("useFsEvents")]),t._v(" and "),e("code",[t._v("usePolling")]),t._v(" are "),e("code",[t._v("false")]),t._v(').\nAutomatically filters out artifacts that occur when using editors that use\n"atomic writes" instead of writing directly to the source file. If a file is\nre-added within 100 ms of being deleted, Chokidar emits a '),e("code",[t._v("change")]),t._v(" event\nrather than "),e("code",[t._v("unlink")]),t._v(" then "),e("code",[t._v("add")]),t._v(". If the default of 100 ms does not work well\nfor you, you can override it by setting "),e("code",[t._v("atomic")]),t._v(" to a custom value, in\nmilliseconds.")])]),t._v(" "),e("h3",{attrs:{id:"methods-events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods-events"}},[t._v("#")]),t._v(" Methods & Events")]),t._v(" "),e("p",[e("code",[t._v("chokidar.watch()")]),t._v(" produces an instance of "),e("code",[t._v("FSWatcher")]),t._v(". Methods of "),e("code",[t._v("FSWatcher")]),t._v(":")]),t._v(" "),e("ul",[e("li",[e("code",[t._v(".add(path / paths)")]),t._v(": Add files, directories, or glob patterns for tracking.\nTakes an array of strings or just one string.")]),t._v(" "),e("li",[e("code",[t._v(".on(event, callback)")]),t._v(": Listen for an FS event.\nAvailable events: "),e("code",[t._v("add")]),t._v(", "),e("code",[t._v("addDir")]),t._v(", "),e("code",[t._v("change")]),t._v(", "),e("code",[t._v("unlink")]),t._v(", "),e("code",[t._v("unlinkDir")]),t._v(", "),e("code",[t._v("ready")]),t._v(",\n"),e("code",[t._v("raw")]),t._v(", "),e("code",[t._v("error")]),t._v(".\nAdditionally "),e("code",[t._v("all")]),t._v(" is available which gets emitted with the underlying event\nname and path for every event other than "),e("code",[t._v("ready")]),t._v(", "),e("code",[t._v("raw")]),t._v(", and "),e("code",[t._v("error")]),t._v(".  "),e("code",[t._v("raw")]),t._v(" is internal, use it carefully.")]),t._v(" "),e("li",[e("code",[t._v(".unwatch(path / paths)")]),t._v(": Stop watching files, directories, or glob patterns.\nTakes an array of strings or just one string.")]),t._v(" "),e("li",[e("code",[t._v(".close()")]),t._v(": "),e("strong",[t._v("async")]),t._v(" Removes all listeners from watched files. Asynchronous, returns Promise. Use with "),e("code",[t._v("await")]),t._v(" to ensure bugs don't happen.")]),t._v(" "),e("li",[e("code",[t._v(".getWatched()")]),t._v(": Returns an object representing all the paths on the file\nsystem being watched by this "),e("code",[t._v("FSWatcher")]),t._v(" instance. The object's keys are all the\ndirectories (using absolute paths unless the "),e("code",[t._v("cwd")]),t._v(" option was used), and the\nvalues are arrays of the names of the items contained in each directory.")])]),t._v(" "),e("h2",{attrs:{id:"cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cli"}},[t._v("#")]),t._v(" CLI")]),t._v(" "),e("p",[t._v("If you need a CLI interface for your file watching, check out\n"),e("a",{attrs:{href:"https://github.com/open-cli-tools/chokidar-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("chokidar-cli"),e("OutboundLink")],1),t._v(", allowing you to\nexecute a command on each change, or get a stdio stream of change events.")]),t._v(" "),e("h2",{attrs:{id:"install-troubleshooting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-troubleshooting"}},[t._v("#")]),t._v(" Install Troubleshooting")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("npm WARN optional dep failed, continuing fsevents@n.n.n")])]),t._v(" "),e("ul",[e("li",[t._v("This message is normal part of how "),e("code",[t._v("npm")]),t._v(" handles optional dependencies and is\nnot indicative of a problem. Even if accompanied by other related error messages,\nChokidar should function properly.")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("TypeError: fsevents is not a constructor")])]),t._v(" "),e("ul",[e("li",[t._v("Update chokidar by doing "),e("code",[t._v("rm -rf node_modules package-lock.json yarn.lock && npm install")]),t._v(", or update your dependency that uses chokidar.")])])]),t._v(" "),e("li",[e("p",[t._v("Chokidar is producing "),e("code",[t._v("ENOSP")]),t._v(" error on Linux, like this:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("bash: cannot set terminal process group (-1): Inappropriate ioctl for device bash: no job control in this shell")]),t._v(" "),e("code",[t._v("Error: watch /home/ ENOSPC")])]),t._v(" "),e("li",[t._v("This means Chokidar ran out of file handles and you'll need to increase their count by executing the following command in Terminal:\n"),e("code",[t._v("echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p")])])])])]),t._v(" "),e("h2",{attrs:{id:"changelog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#changelog"}},[t._v("#")]),t._v(" Changelog")]),t._v(" "),e("p",[t._v("For more detailed changelog, see "),e("RouterLink",{attrs:{to:"/software/node_modules/chokidar/.github/full_changelog.html"}},[e("code",[t._v("full_changelog.md")])]),t._v(".")],1),t._v(" "),e("ul",[e("li",[e("strong",[t._v("v3.5 (Jan 6, 2021):")]),t._v(" Support for ARM Macs with Apple Silicon. Fixes for deleted symlinks.")]),t._v(" "),e("li",[e("strong",[t._v("v3.4 (Apr 26, 2020):")]),t._v(" Support for directory-based symlinks. Fixes for macos file replacement.")]),t._v(" "),e("li",[e("strong",[t._v("v3.3 (Nov 2, 2019):")]),t._v(" "),e("code",[t._v("FSWatcher#close()")]),t._v(" method became async. That fixes IO race conditions related to close method.")]),t._v(" "),e("li",[e("strong",[t._v("v3.2 (Oct 1, 2019):")]),t._v(" Improve Linux RAM usage by 50%. Race condition fixes. Windows glob fixes. Improve stability by using tight range of dependency versions.")]),t._v(" "),e("li",[e("strong",[t._v("v3.1 (Sep 16, 2019):")]),t._v(" dotfiles are no longer filtered out by default. Use "),e("code",[t._v("ignored")]),t._v(" option if needed. Improve initial Linux scan time by 50%.")]),t._v(" "),e("li",[e("strong",[t._v("v3 (Apr 30, 2019):")]),t._v(" massive CPU & RAM consumption improvements; reduces deps / package size by a factor of 17x and bumps Node.js requirement to v8.16 and higher.")]),t._v(" "),e("li",[e("strong",[t._v("v2 (Dec 29, 2017):")]),t._v(" Globs are now posix-style-only; without windows support. Tons of bugfixes.")]),t._v(" "),e("li",[e("strong",[t._v("v1 (Apr 7, 2015):")]),t._v(" Glob support, symlink support, tons of bugfixes. Node 0.8+ is supported")]),t._v(" "),e("li",[e("strong",[t._v("v0.1 (Apr 20, 2012):")]),t._v(" Initial release, extracted from "),e("a",{attrs:{href:"https://github.com/brunch/brunch/blob/9847a065aea300da99bd0753f90354cde9de1261/src/helpers.coffee#L66",target:"_blank",rel:"noopener noreferrer"}},[t._v("Brunch"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"also"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#also"}},[t._v("#")]),t._v(" Also")]),t._v(" "),e("p",[t._v("Why was chokidar named this way? What's the meaning behind it?")]),t._v(" "),e("blockquote",[e("p",[t._v("Chowkidar is a transliteration of a Hindi word meaning 'watchman, gatekeeper', चौकीदार. This ultimately comes from Sanskrit _ चतुष्क_ (crossway, quadrangle, consisting-of-four). This word is also used in other languages like Urdu as (چوکیدار) which is widely used in Pakistan and India.")])]),t._v(" "),e("h2",{attrs:{id:"license"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),e("p",[t._v("MIT (c) Paul Miller ("),e("a",{attrs:{href:"https://paulmillr.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://paulmillr.com"),e("OutboundLink")],1),t._v("), see "),e("a",{attrs:{href:"LICENSE"}},[t._v("LICENSE")]),t._v(" file.")])])}),[],!1,null,null,null);e.default=n.exports}}]);